rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for authentication and authorization
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(resource) {
      return request.auth.uid == resource.data.userId;
    }
    
    function isProjectOwner(projectId) {
      return request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId;
    }
    
    function isProjectCollaborator(projectId) {
      return request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.collaborators;
    }
    
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects collection - owner and collaborators can access
    match /projects/{projectId} {
      allow read, write: if isAuthenticated() && 
        (isProjectOwner(projectId) || isProjectCollaborator(projectId));
      allow create: if isAuthenticated() && request.auth.uid == resource.data.ownerId;
      
      // Conversations within projects
      match /conversations/{conversationId} {
        allow read, write: if isAuthenticated() && 
          (isProjectOwner(projectId) || isProjectCollaborator(projectId));
      }
      
      // Canvas documents within projects
      match /canvas/{canvasId} {
        allow read, write: if isAuthenticated() && 
          (isProjectOwner(projectId) || isProjectCollaborator(projectId));
      }
    }
    
    // Prompts collection - users can access their own prompts and public ones
    match /prompts/{promptId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || resource.data.public == true);
      allow create, update, delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Files collection - users can access files in their projects
    match /files/{fileId} {
      allow read, write: if isAuthenticated() && 
        (isProjectOwner(resource.data.projectId) || 
         isProjectCollaborator(resource.data.projectId));
    }
    
    // Usage tracking - users can only access their own usage data
    match /usage/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      
      match /daily/{date} {
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
      }
    }
  }
}
